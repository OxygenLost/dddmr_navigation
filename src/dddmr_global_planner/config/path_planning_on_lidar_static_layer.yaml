pcl_publisher:
  ros__parameters:
    global_frame: "map"
    map_rotate_around_x: 0.0
    map_rotate_around_y: 0.0
    map_rotate_around_z: 0.0
    map_translate_x: 0.0
    map_translate_y: 0.0
    map_translate_z: 0.0
    ground_rotate_around_x: 0.0
    ground_rotate_around_y: 0.0
    ground_rotate_around_z: 0.0
    ground_translate_x: 0.0
    ground_translate_y: 0.0
    ground_translate_z: 0.0
    map_down_sample: 0.3
    ground_down_sample: 0.4

perception_3d_global:
  ros__parameters:
    global_frame: "map"
    robot_base_frame: "base_link"
    max_obstacle_distance: 9999.0
    inscribed_radius: 0.5
    inflation_descending_rate: 2.0
    inflation_radius: 1.5
    sensors_collected_frequency: 10.0
    plugins: ["map", "lidar"]
    dgraph_publish_frequency: 1.0
    map:
      plugin: "perception_3d::StaticLayer"
      is_local_planner: false
      use_adaptive_connection: false #If true: the neighbors of node is sparse, it will automatically increase search radius.
      adaptive_connection_number: 20
      radius_of_ground_connection: 1.5 #If use_adaptive_connection=false, the radius search of the node is applied.
      intensity_search_radius: 1.0 #this value is suggested to be 1.0 meters, because if it is too large, the narrow passage will be miscalculated
      intensity_search_punish_weight: 0.1 #the weight for a node. Set this value higher means we dont like path planning cross a orphan node.
      static_imposing_radius: 1.5 #use map to add weight on each ground node
      mapping_mode: false
      map_topic: "mapcloud"
      ground_topic: "mapground"
    lidar:
      plugin: "perception_3d::MultiLayerSpinningLidar"
      is_local_planner: false
      topic: "dummy_point_cloud"
      pub_gbl_marking_for_visualization: true
      vertical_FOV_top: 15.0
      vertical_FOV_bottom: -15.0
      scan_effective_positive_start: 0.0
      scan_effective_positive_end: 180.0
      scan_effective_negative_start: -0.0
      scan_effective_negative_end: -180.0
      euclidean_cluster_extraction_tolerance: 0.15
      euclidean_cluster_extraction_min_cluster_size: 1
      xy_resolution: 0.05
      height_resolution: 0.05
      marking_height: 2.0
      perception_window_size: 20.0 #the window for marking/clearing in meter, we dont casting to maximum range of the sensor even it is gbl map
      segmentation_ignore_ratio: 1.1 #f a segmentation match static pc with this ratio, we ignore it. ex: a wall
      expected_sensor_time: 0.1

global_planner:
  ros__parameters:
    turning_weight: 0.1 #Punish the zig-zag path
    enable_detail_log: false
    a_star_expanding_radius: 1.0

#if we use get_dwa_plan in global_plan_manager, we setup parameters for dwa_global_planner
dynamic_window_aware_global_planner:
  ros__parameters:
    look_ahead_distance: 9.0
    recompute_frequency: 10.0